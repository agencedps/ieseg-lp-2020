/**
 * mixins
 * contains mixins to powerup the styles.
 */

/// INTERPOLATE
/// mixin to interpolate a property from min to max value, between min and max limits screen sizes.
/// (for the font-size for example)
@mixin interpolate($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

/// STRIP-UNIT
/// function to remove the unit of a value.
/// (function needed for interpolate)
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/// MIXIN TO MANAGE RESPONSIVE BREAKPOINTS
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints (in _variable.scss)
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/// CONTAINERS WIDTH
/// mixins to manage the containers width.
/// @param max-width
@mixin container-width($maxwidth: 1920px) {
  width: 100%;
  max-width: $maxwidth;
  margin: 0 auto;
}

/// WRAPPERS WIDTH
/// mixins to manage the wrappers width.
/// @param margin left and right (equal)
/// @require respond-to
@mixin wrapper-width($margin: 12.5%) {
  margin-right: auto;
  margin-left: auto;
  @include respond-to('small') {
    margin-right: $margin;
    margin-left: $margin;
  }
}